<!DOCTYPE html>
<html xml:lang="zh-CN" lang="zh-CN">

<head>
        <link rel="canonical" href="https://freestashnode.github.io/news/article-97130.htm" />
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=0">
    <title>vue3+vite 实现自动导入路由+组件</title>
        <meta name="description" content="router.js文件 import {createRouter, createWebHistory} from 'vue-router'  let _Vue export default funct" />
        <link rel="icon" href="/assets/website/img/freestashnode/favicon.ico" type="image/x-icon"/>

    <meta name="author" content="Free Stash Node免费机场节点分享官网">
    <meta property="og:type" content="article" />
    <meta property="og:url" content="https://freestashnode.github.io/news/article-97130.htm" />
    <meta property="og:site_name" content="Free Stash Node免费机场节点分享官网" />
    <meta property="og:title" content="vue3+vite 实现自动导入路由+组件" />
    <meta property="og:image" content="https://freestashnode.github.io/uploads/20240919/c2084b0e086576b38263adf74c5ca2dd.webp" />
        <meta property="og:release_date" content="2025-04-16T08:39:51" />
    <meta property="og:updated_time" content="2025-04-16T08:39:51" />
        <meta property="og:description" content="router.js文件 import {createRouter, createWebHistory} from 'vue-router'  let _Vue export default funct" />
    
    <meta name="applicable-device" content="pc,mobile" />
    <meta name="renderer" content="webkit" />
    <meta name="force-rendering" content="webkit" />
    <meta http-equiv="Cache-Control" content="no-transform" />
    <meta name="robots" content="max-image-preview:large" />
    <meta name="apple-mobile-web-app-capable" content="yes">
    <meta name="apple-mobile-web-app-status-bar-style" content="black">
    <meta name="apple-mobile-web-app-title" content="vue3+vite 实现自动导入路由+组件">
    <meta name="format-detection" content="telephone=no">

    <link rel="dns-prefetch" href="https:/www.googletagmanager.com">
    <link rel="dns-prefetch" href="https://www.googleadservices.com">
    <link rel="dns-prefetch" href="https://www.google-analytics.com">
    <link rel="dns-prefetch" href="https://pagead2.googlesyndication.com">
    <link rel="dns-prefetch" href="https://cm.g.doubleclick.net">
    <link rel="dns-prefetch" href="https://fonts.googleapis.com">

    <!-- Google Fonts -->
    <link href="https://fonts.googleapis.com/css2?family=Roboto:ital,wght@0,300;0,400;0,500;0,700;0,900;1,300;1,400;1,500;1,700;1,900&display=swap" rel="stylesheet">
    <!-- Stylesheets -->
    <link href="/assets/website/css/freestashnode/font-awesome-all.css" rel="stylesheet">
    <link href="/assets/website/css/freestashnode/flaticon.css" rel="stylesheet">
    <link href="/assets/website/css/freestashnode/owl.css" rel="stylesheet">
    <link href="/assets/website/css/freestashnode/bootstrap.css" rel="stylesheet">
    <link href="/assets/website/css/freestashnode/jquery.fancybox.min.css" rel="stylesheet">
    <link href="/assets/website/css/freestashnode/animate.css" rel="stylesheet">
    <link href="/assets/website/css/freestashnode/color.css" rel="stylesheet">
    <link href="/assets/website/css/freestashnode/style.css" rel="stylesheet">
    <link href="/assets/website/css/freestashnode/responsive.css" rel="stylesheet">
    <!-- Google tag (gtag.js) -->
<script async src="https://www.googletagmanager.com/gtag/js?id=G-YXFDLQYLFV"></script>
<script>
  window.dataLayer = window.dataLayer || [];
  function gtag(){dataLayer.push(arguments);}
  gtag('js', new Date());

  gtag('config', 'G-YXFDLQYLFV');
</script>
    <script async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-3332997411212854"
     crossorigin="anonymous"></script>
</head>
<!-- page wrapper -->

<body data-page="detail">
    <div class="boxed_wrapper">
                <!-- preloader -->
        <div class="preloader"></div>
        <!-- preloader -->
        <!-- main header -->
        <header class="main-header style-one">
            <!-- header-lower -->
            <div class="header-lower">
                <div class="outer-box">
                    <div class="logo-box">
                        <figure class="logo">
                            <a href="/">
                                                        <span>Free Stash Node</span>
                                                        </a>
                        </figure>
                    </div>
                    <div class="menu-area">
                        <!--Mobile Navigation Toggler-->
                        <div class="mobile-nav-toggler">
                            <i class="icon-bar"></i>
                            <i class="icon-bar"></i>
                            <i class="icon-bar"></i>
                        </div>
                        <nav class="main-menu navbar-expand-md navbar-light">
                            <div class="collapse navbar-collapse show clearfix" id="navbarSupportedContent">
                                <ul class="navigation clearfix">
                                                                        <li><a href="/">首页</a></li>
                                                                        <li><a href="/free-nodes/">免费节点</a></li>
                                                                        <li><a href="/paid-subscribe/">推荐机场</a></li>
                                                                        <li><a href="/client.htm">客户端</a></li>
                                                                        <li><a href="/news/">新闻资讯</a></li>
                                                                    </ul>
                            </div>
                        </nav>
                    </div>
                </div>
            </div>
            <!--sticky Header-->
            <div class="sticky-header">
                <div class="outer-box">
                    <div class="logo-box">
                        <figure class="logo">
                            <a href="/">
                                <span>Free Stash Node</span>
                            </a>
                        </figure>
                    </div>
                    <div class="menu-area">
                        <nav class="main-menu clearfix">
                            <!--Keep This Empty / Menu will come through Javascript-->
                        </nav>
                    </div>
                </div>
            </div>
        </header>
        <!-- main-header end -->
        <!-- Mobile Menu  -->
        <div class="mobile-menu">
            <div class="menu-backdrop"></div>
            <div class="close-btn"><i class="fas fa-times"></i></div>
            <nav class="menu-box">
                <div class="menu-outer">
                    <!--Here Menu Will Come Automatically Via Javascript / Same Menu as in Header-->
                </div>
                <div class="social-links">
                    <ul class="clearfix">
                        <li><a href="#"><span class="fab fa-twitter"></span></a></li>
                        <li><a href="#"><span class="fab fa-facebook-square"></span></a></li>
                        <li><a href="#"><span class="fab fa-pinterest-p"></span></a></li>
                        <li><a href="#"><span class="fab fa-instagram"></span></a></li>
                        <li><a href="#"><span class="fab fa-youtube"></span></a></li>
                    </ul>
                </div>
            </nav>
        </div><!-- End Mobile Menu -->
        <!-- Page Title -->
        <section class="page-title centred" style="background-image: url(/assets/website/img/freestashnode/background/page-title.jpg);">
            <div class="auto-container">
                <div class="content-box">
                    <div class="title">
                        <h1>vue3+vite 实现自动导入路由+组件</h1>
                    </div>
                    <ul class="bread-crumb clearfix">
                        <li><a href="/">首页</a></li>
                        <li><a href="/news/">新闻资讯</a></li>
                        <li>正文</li>
                    </ul>
                </div>
            </div>
        </section>
        <!-- End Page Title -->
        <!-- about-section -->
        <section class="about-section">
            <div class="auto-container">
                <div class="row clearfix">
                    <div class="col-md-9">
                                        <input type="hidden" id="share-website-info" data-name="StashNode免费订阅官网" data-url="https://stashnode.github.io">
                  				  				  				<div id="content_views" class="markdown_views prism-atom-one-dark"> <h3> <a id="routerjs_0" rel="nofollow"></a>router.js文件</h3> <pre><code class="prism language-js"><span class="token keyword">import</span> <span class="token punctuation">{<!-- --></span>createRouter<span class="token punctuation">,</span> createWebHistory<span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'vue-router'</span>  <span class="token keyword">let</span> _Vue <span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token keyword">function</span> <span class="token function">install</span><span class="token punctuation">(</span><span class="token parameter">Vue</span><span class="token punctuation">)</span> <span class="token punctuation">{<!-- --></span>     <span class="token keyword">if</span> <span class="token punctuation">(</span>install<span class="token punctuation">.</span>installed <span class="token operator">&amp;&amp;</span> _Vue <span class="token operator">===</span> Vue<span class="token punctuation">)</span> <span class="token keyword">return</span>     install<span class="token punctuation">.</span>installed <span class="token operator">=</span> <span class="token boolean">true</span>     _Vue <span class="token operator">=</span> Vue      <span class="token comment">//杠+后面的字母变为大写字母并去除杠</span>     <span class="token keyword">function</span> <span class="token function">toCamelCase</span><span class="token punctuation">(</span><span class="token parameter">str</span><span class="token punctuation">)</span> <span class="token punctuation">{<!-- --></span>         <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>str<span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token string">''</span><span class="token punctuation">;</span>         <span class="token keyword">return</span> str<span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">-(\w)</span><span class="token regex-delimiter">/</span><span class="token regex-flags">g</span></span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">$<span class="token number">0</span><span class="token punctuation">,</span> $<span class="token number">1</span></span><span class="token punctuation">)</span> <span class="token punctuation">{<!-- --></span>             <span class="token keyword">return</span> $<span class="token number">1.</span><span class="token function">toUpperCase</span><span class="token punctuation">(</span><span class="token punctuation">)</span>         <span class="token punctuation">}</span><span class="token punctuation">)</span>     <span class="token punctuation">}</span>      <span class="token comment">//首字母大写</span>     <span class="token keyword">function</span> <span class="token function">capitalizeFirstLetter</span><span class="token punctuation">(</span><span class="token parameter">str</span><span class="token punctuation">)</span> <span class="token punctuation">{<!-- --></span>         <span class="token keyword">return</span> str<span class="token punctuation">.</span><span class="token function">charAt</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toUpperCase</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> str<span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>     <span class="token punctuation">}</span>      <span class="token keyword">const</span> routerList <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span> childrenList <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>    	<span class="token comment">// vite导入文件方法</span>     <span class="token keyword">const</span> requireComponent <span class="token operator">=</span> <span class="token keyword">import</span><span class="token punctuation">.</span>meta<span class="token punctuation">.</span><span class="token function">globEager</span><span class="token punctuation">(</span><span class="token string">'./views/**/*.vue'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>     <span class="token comment">//使用文件内name值列表</span>     <span class="token keyword">const</span> useDefaultNameList <span class="token operator">=</span> <span class="token punctuation">{<!-- --></span><span class="token punctuation">}</span><span class="token punctuation">;</span>     <span class="token comment">//不全局导入列表</span>     <span class="token keyword">const</span> doNotRegisterList <span class="token operator">=</span> <span class="token punctuation">{<!-- --></span>         <span class="token string">'Home'</span><span class="token operator">:</span> <span class="token operator">!</span><span class="token number">0</span>     <span class="token punctuation">}</span><span class="token punctuation">;</span>      <span class="token comment">//自动注册</span>     <span class="token keyword">const</span> myModules <span class="token operator">=</span> <span class="token punctuation">{<!-- --></span><span class="token punctuation">}</span><span class="token punctuation">;</span>     <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token keyword">in</span> requireComponent<span class="token punctuation">)</span> <span class="token punctuation">{<!-- --></span>     	<span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span>requireComponent<span class="token punctuation">.</span><span class="token function">hasOwnProperty</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token keyword">continue</span><span class="token punctuation">;</span>         <span class="token keyword">const</span> componentConfig <span class="token operator">=</span> requireComponent<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>         <span class="token keyword">let</span> camelCaseName<span class="token punctuation">,</span> firstLetter<span class="token punctuation">,</span>             componentName <span class="token operator">=</span> <span class="token function">capitalizeFirstLetter</span><span class="token punctuation">(</span><span class="token function">toCamelCase</span><span class="token punctuation">(</span>i<span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token string">'./views/'</span><span class="token punctuation">,</span> <span class="token string">''</span><span class="token punctuation">)</span>                 <span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\/</span><span class="token regex-delimiter">/</span><span class="token regex-flags">g</span></span><span class="token punctuation">,</span> <span class="token string">'-'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token string">'.vue'</span><span class="token punctuation">,</span> <span class="token string">''</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>         <span class="token keyword">if</span> <span class="token punctuation">(</span>useDefaultNameList<span class="token punctuation">[</span>componentName<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">{<!-- --></span>             camelCaseName <span class="token operator">=</span> <span class="token function">toCamelCase</span><span class="token punctuation">(</span>componentConfig<span class="token punctuation">.</span>default<span class="token punctuation">.</span>name<span class="token punctuation">)</span><span class="token punctuation">;</span>             componentName <span class="token operator">=</span> firstLetter <span class="token operator">=</span> <span class="token function">capitalizeFirstLetter</span><span class="token punctuation">(</span>camelCaseName<span class="token punctuation">)</span><span class="token punctuation">;</span>         <span class="token punctuation">}</span>         <span class="token keyword">if</span> <span class="token punctuation">(</span>myModules<span class="token punctuation">[</span>componentName<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token keyword">continue</span><span class="token punctuation">;</span>         <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>doNotRegisterList<span class="token punctuation">[</span>componentName<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">{<!-- --></span>             <span class="token keyword">const</span> <span class="token punctuation">{<!-- --></span>params <span class="token operator">=</span> <span class="token string">''</span><span class="token punctuation">,</span> parentName <span class="token operator">=</span> <span class="token string">''</span><span class="token punctuation">,</span> pathIsNullCharacter <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">}</span> <span class="token operator">=</span> componentConfig<span class="token punctuation">.</span>default<span class="token punctuation">.</span>_pageParams <span class="token operator">||</span> <span class="token punctuation">{<!-- --></span><span class="token punctuation">}</span><span class="token punctuation">;</span>             <span class="token keyword">const</span> component <span class="token operator">=</span> <span class="token punctuation">{<!-- --></span>                 name<span class="token operator">:</span> componentName<span class="token punctuation">,</span>                 path<span class="token operator">:</span> <span class="token operator">!</span>pathIsNullCharacter <span class="token operator">?</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>parentName <span class="token operator">?</span> <span class="token string">''</span> <span class="token operator">:</span> <span class="token string">'/'</span><span class="token punctuation">)</span> <span class="token operator">+</span> componentName <span class="token operator">+</span> params<span class="token punctuation">)</span> <span class="token operator">:</span> <span class="token string">''</span><span class="token punctuation">,</span>                 component<span class="token operator">:</span> componentConfig<span class="token punctuation">.</span>default <span class="token operator">||</span> componentConfig<span class="token punctuation">,</span>                 children<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>             <span class="token punctuation">}</span><span class="token punctuation">;</span>             <span class="token keyword">if</span> <span class="token punctuation">(</span>parentName<span class="token punctuation">)</span> <span class="token punctuation">{<!-- --></span>                 <span class="token keyword">delete</span> component<span class="token punctuation">.</span>children<span class="token punctuation">;</span>                 <span class="token keyword">const</span> child <span class="token operator">=</span> childrenList<span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span><span class="token parameter">item</span> <span class="token operator">=&gt;</span> item<span class="token punctuation">.</span>name <span class="token operator">===</span> parentName<span class="token punctuation">)</span><span class="token punctuation">;</span>                 <span class="token keyword">if</span> <span class="token punctuation">(</span>child<span class="token punctuation">)</span> <span class="token punctuation">{<!-- --></span>                     child<span class="token punctuation">.</span>children<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>component<span class="token punctuation">)</span><span class="token punctuation">;</span>                 <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{<!-- --></span>                     childrenList<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token punctuation">{<!-- --></span>                         name<span class="token operator">:</span> parentName<span class="token punctuation">,</span>                         children<span class="token operator">:</span> <span class="token punctuation">[</span>component<span class="token punctuation">]</span>                     <span class="token punctuation">}</span><span class="token punctuation">)</span>                 <span class="token punctuation">}</span>             <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{<!-- --></span>                 routerList<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>component<span class="token punctuation">)</span>             <span class="token punctuation">}</span>             myModules<span class="token punctuation">[</span>componentName<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token operator">!</span><span class="token number">0</span><span class="token punctuation">;</span>         <span class="token punctuation">}</span>     <span class="token punctuation">}</span>     <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> routerList<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{<!-- --></span>         <span class="token keyword">let</span> parent <span class="token operator">=</span> routerList<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>         <span class="token keyword">let</span> index <span class="token operator">=</span> childrenList<span class="token punctuation">.</span><span class="token function">findIndex</span><span class="token punctuation">(</span><span class="token parameter">item</span> <span class="token operator">=&gt;</span> item<span class="token punctuation">.</span>name <span class="token operator">===</span> parent<span class="token punctuation">.</span>name<span class="token punctuation">)</span><span class="token punctuation">;</span>         <span class="token keyword">if</span> <span class="token punctuation">(</span>index <span class="token operator">&gt;</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{<!-- --></span>             <span class="token keyword">let</span> child <span class="token operator">=</span> childrenList<span class="token punctuation">[</span>index<span class="token punctuation">]</span><span class="token punctuation">;</span>             childrenList<span class="token punctuation">.</span><span class="token function">splice</span><span class="token punctuation">(</span>index<span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>             parent<span class="token punctuation">.</span>children <span class="token operator">=</span> child<span class="token punctuation">.</span>children<span class="token punctuation">;</span>         <span class="token punctuation">}</span>     <span class="token punctuation">}</span>     <span class="token keyword">const</span> routes <span class="token operator">=</span> <span class="token punctuation">[</span>         <span class="token punctuation">{<!-- --></span>             path<span class="token operator">:</span> <span class="token string">'/'</span><span class="token punctuation">,</span>             name<span class="token operator">:</span> <span class="token string">'Home'</span><span class="token punctuation">,</span>             <span class="token function-variable function">component</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token keyword">import</span><span class="token punctuation">(</span><span class="token string">"./views/home.vue"</span><span class="token punctuation">)</span>         <span class="token punctuation">}</span><span class="token punctuation">,</span>         <span class="token operator">...</span>routerList     <span class="token punctuation">]</span><span class="token punctuation">;</span>     <span class="token keyword">const</span> router <span class="token operator">=</span> <span class="token function">createRouter</span><span class="token punctuation">(</span><span class="token punctuation">{<!-- --></span>         history<span class="token operator">:</span> <span class="token function">createWebHistory</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>         <span class="token comment">// history: createWebHashHistory(),</span>         routes     <span class="token punctuation">}</span><span class="token punctuation">)</span>     Vue<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span>router<span class="token punctuation">)</span> <span class="token punctuation">}</span> </code></pre> <h3> <a id="vue_96" rel="nofollow"></a>vue页面</h3> <pre><code class="prism language-js">   <span class="token operator">&lt;</span>template<span class="token operator">&gt;</span>   <span class="token operator">&lt;</span>div <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"eventIndex"</span><span class="token operator">&gt;</span>     <span class="token operator">&lt;</span>div<span class="token operator">&gt;</span>asfkafjasfjafijiofj<span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">&gt;</span>     <span class="token operator">&lt;</span>router<span class="token operator">-</span>view <span class="token operator">:</span>key<span class="token operator">=</span><span class="token string">"$route.path"</span> <span class="token operator">/</span><span class="token operator">&gt;</span>     <span class="token operator">&lt;</span>button @click<span class="token operator">=</span><span class="token string">"jumpPage"</span><span class="token operator">&gt;</span>继续跳啊<span class="token operator">&lt;</span><span class="token operator">/</span>button<span class="token operator">&gt;</span>   <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">&gt;</span> <span class="token operator">&lt;</span><span class="token operator">/</span>template<span class="token operator">&gt;</span>  <span class="token operator">&lt;</span>script<span class="token operator">&gt;</span> <span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">{<!-- --></span>   name<span class="token operator">:</span> <span class="token string">"eventIndex"</span><span class="token punctuation">,</span>   <span class="token comment">//自动导入时需要用到的参数</span>   _pageParams<span class="token operator">:</span> <span class="token punctuation">{<!-- --></span>   <span class="token comment">//路由需要用到的参数</span>     params<span class="token operator">:</span> <span class="token string">'/:id?/:menuId?'</span><span class="token punctuation">,</span>     <span class="token comment">//path是否是''字符串</span>     pathIsNullCharacter<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>     <span class="token comment">//父组件的名字，如果有这个参数，则是子组件</span>     parentName<span class="token operator">:</span> <span class="token string">''</span>   <span class="token punctuation">}</span><span class="token punctuation">,</span>   methods<span class="token operator">:</span> <span class="token punctuation">{<!-- --></span>     <span class="token function">jumpPage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{<!-- --></span>       <span class="token keyword">this</span><span class="token punctuation">.</span>$router<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token string">'/EventDetail'</span><span class="token punctuation">)</span>     <span class="token punctuation">}</span>   <span class="token punctuation">}</span> <span class="token punctuation">}</span> <span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">&gt;</span>  <span class="token operator">&lt;</span>style scoped<span class="token operator">&gt;</span>  <span class="token operator">&lt;</span><span class="token operator">/</span>style<span class="token operator">&gt;</span> </code></pre> <h3> <a id="componentsjs_130" rel="nofollow"></a>下方为自动导入组件（components.js）</h3> <pre><code class="prism language-js"><span class="token keyword">let</span> _Vue <span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token keyword">function</span> <span class="token function">install</span><span class="token punctuation">(</span><span class="token parameter">Vue</span><span class="token punctuation">)</span> <span class="token punctuation">{<!-- --></span>     <span class="token keyword">if</span> <span class="token punctuation">(</span>install<span class="token punctuation">.</span>installed <span class="token operator">&amp;&amp;</span> _Vue <span class="token operator">===</span> Vue<span class="token punctuation">)</span> <span class="token keyword">return</span>     install<span class="token punctuation">.</span>installed <span class="token operator">=</span> <span class="token boolean">true</span>     _Vue <span class="token operator">=</span> Vue      <span class="token comment">//杠+后面的字母变为大写字母并去除杠</span>     <span class="token keyword">function</span> <span class="token function">toCamelCase</span><span class="token punctuation">(</span><span class="token parameter">str</span><span class="token punctuation">)</span> <span class="token punctuation">{<!-- --></span>         <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>str<span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token string">''</span><span class="token punctuation">;</span>         <span class="token keyword">return</span> str<span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">-(\w)</span><span class="token regex-delimiter">/</span><span class="token regex-flags">g</span></span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">$<span class="token number">0</span><span class="token punctuation">,</span> $<span class="token number">1</span></span><span class="token punctuation">)</span> <span class="token punctuation">{<!-- --></span>             <span class="token keyword">return</span> $<span class="token number">1.</span><span class="token function">toUpperCase</span><span class="token punctuation">(</span><span class="token punctuation">)</span>         <span class="token punctuation">}</span><span class="token punctuation">)</span>     <span class="token punctuation">}</span>      <span class="token comment">//首字母大写</span>     <span class="token keyword">function</span> <span class="token function">capitalizeFirstLetter</span><span class="token punctuation">(</span><span class="token parameter">str</span><span class="token punctuation">)</span> <span class="token punctuation">{<!-- --></span>         <span class="token keyword">return</span> str<span class="token punctuation">.</span><span class="token function">charAt</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toUpperCase</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> str<span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>     <span class="token punctuation">}</span>      <span class="token comment">//获取vue的文件名</span>     <span class="token keyword">function</span> <span class="token function">validateFileName</span><span class="token punctuation">(</span><span class="token parameter">str</span><span class="token punctuation">)</span> <span class="token punctuation">{<!-- --></span>         <span class="token keyword">return</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">^\S+\.vue$</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span>str<span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span>             str<span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">^\S+\/(\w+)\.vue$</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">rs<span class="token punctuation">,</span> $<span class="token number">1</span></span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token function">capitalizeFirstLetter</span><span class="token punctuation">(</span><span class="token function">toCamelCase</span><span class="token punctuation">(</span>$<span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>     <span class="token punctuation">}</span> 	<span class="token comment">//vite导入组件的方法</span>     <span class="token keyword">const</span> requireComponent <span class="token operator">=</span> <span class="token keyword">import</span><span class="token punctuation">.</span>meta<span class="token punctuation">.</span><span class="token function">globEager</span><span class="token punctuation">(</span><span class="token string">'./**/*.vue'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>     <span class="token comment">//使用文件内name值列表</span>     <span class="token keyword">const</span> useDefaultNameList <span class="token operator">=</span> <span class="token punctuation">{<!-- --></span><span class="token punctuation">}</span><span class="token punctuation">;</span>      <span class="token comment">//不全局注册列表</span>     <span class="token keyword">const</span> doNotRegisterList <span class="token operator">=</span> <span class="token punctuation">{<!-- --></span><span class="token punctuation">}</span><span class="token punctuation">;</span>      <span class="token comment">//自动注册组件</span>     <span class="token keyword">const</span> modules <span class="token operator">=</span> <span class="token punctuation">{<!-- --></span><span class="token punctuation">}</span><span class="token punctuation">;</span>     <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token keyword">in</span> requireComponent<span class="token punctuation">)</span> <span class="token punctuation">{<!-- --></span>     	<span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span>requireComponent<span class="token punctuation">.</span><span class="token function">hasOwnProperty</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token keyword">continue</span><span class="token punctuation">;</span>         <span class="token keyword">const</span> componentConfig <span class="token operator">=</span> requireComponent<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>         <span class="token keyword">let</span> camelCaseName<span class="token punctuation">,</span> firstLetter<span class="token punctuation">,</span> componentName<span class="token punctuation">;</span>         <span class="token keyword">if</span> <span class="token punctuation">(</span>componentConfig<span class="token punctuation">.</span>default<span class="token punctuation">.</span>name<span class="token punctuation">)</span> <span class="token punctuation">{<!-- --></span>             camelCaseName <span class="token operator">=</span> <span class="token function">toCamelCase</span><span class="token punctuation">(</span>componentConfig<span class="token punctuation">.</span>default<span class="token punctuation">.</span>name<span class="token punctuation">)</span><span class="token punctuation">;</span>             componentName <span class="token operator">=</span> firstLetter <span class="token operator">=</span> <span class="token function">capitalizeFirstLetter</span><span class="token punctuation">(</span>camelCaseName<span class="token punctuation">)</span><span class="token punctuation">;</span>         <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{<!-- --></span>             componentName <span class="token operator">=</span> <span class="token function">validateFileName</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span>         <span class="token punctuation">}</span>         <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token punctuation">(</span>firstLetter <span class="token operator">&amp;&amp;</span> useDefaultNameList<span class="token punctuation">[</span>firstLetter<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{<!-- --></span>             componentName <span class="token operator">=</span> <span class="token function">validateFileName</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span>         <span class="token punctuation">}</span>         <span class="token keyword">if</span> <span class="token punctuation">(</span>modules<span class="token punctuation">[</span>componentName<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token keyword">continue</span><span class="token punctuation">;</span>         <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>doNotRegisterList<span class="token punctuation">[</span>componentName<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">{<!-- --></span>             Vue<span class="token punctuation">.</span><span class="token function">component</span><span class="token punctuation">(</span>componentName<span class="token punctuation">,</span> componentConfig<span class="token punctuation">.</span>default <span class="token operator">||</span> componentConfig<span class="token punctuation">)</span><span class="token punctuation">;</span>             modules<span class="token punctuation">[</span>componentName<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token operator">!</span><span class="token number">0</span><span class="token punctuation">;</span>         <span class="token punctuation">}</span>     <span class="token punctuation">}</span> <span class="token punctuation">}</span> </code></pre> <h2> <a id="mainjs_187" rel="nofollow"></a>main.js</h2> <pre><code class="prism language-js"><span class="token keyword">import</span> <span class="token punctuation">{<!-- --></span> createApp <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'vue'</span> <span class="token keyword">import</span> App <span class="token keyword">from</span> <span class="token string">'./App.vue'</span> <span class="token keyword">import</span> Components <span class="token keyword">from</span> <span class="token string">'@/components/components'</span> <span class="token keyword">import</span> VueRouter <span class="token keyword">from</span> <span class="token string">'./my-router'</span>  <span class="token keyword">const</span> app <span class="token operator">=</span> <span class="token function">createApp</span><span class="token punctuation">(</span>App<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//这里使用导入组件</span> app<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span>Components<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//这里使用导入路由</span> app<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span>VueRouter<span class="token punctuation">)</span><span class="token punctuation">;</span> app<span class="token punctuation">.</span><span class="token function">mount</span><span class="token punctuation">(</span><span class="token string">'#app'</span><span class="token punctuation">)</span> </code></pre> <p>请问各位吊大的，有木有更好的方法实现自动导入路由呀！！！</p> </p></div> 			                <div class="clearfix"></div>
                <div class="col-md-12 mt-5">
                                        <p>上一个：<a href="/news/article-96459.htm">宠物领养图片真实大全（宠物领养百度百科）</a></p>
                                        <p>下一个：<a href="/news/article-97131.htm">动物预防接种计划表（动物预防接种实验报告）</a></p>
                                    </div>
                                    </div>
                    <div class="col-md-3">
                        <div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">热门文章</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2"><a href="/free-nodes/2025-4-16-free-node-subscribe.htm" title="4月16日→20.7M/S|2025年最新免费节点Free Stash Node订阅链接地址">4月16日→20.7M/S|2025年最新免费节点Free Stash Node订阅链接地址</a></li>
                        <li class="py-2"><a href="/news/article-79734.htm" title="宠物领养app下载安装免费（宠物领养小程序有哪些）">宠物领养app下载安装免费（宠物领养小程序有哪些）</a></li>
                        <li class="py-2"><a href="/news/article-77690.htm" title="netty系列之:netty中的核心MessageToMessage编码器">netty系列之:netty中的核心MessageToMessage编码器</a></li>
                        <li class="py-2"><a href="/news/article-81810.htm" title="Vue+element搭建后台管理系统-二、安装插件">Vue+element搭建后台管理系统-二、安装插件</a></li>
                        <li class="py-2"><a href="/free-nodes/2025-3-7-node-share.htm" title="3月7日→22.3M/S|2025年最新免费节点Free Stash Node订阅链接地址">3月7日→22.3M/S|2025年最新免费节点Free Stash Node订阅链接地址</a></li>
                        <li class="py-2"><a href="/news/article-83940.htm" title="Python实现双X轴双Y轴绘图">Python实现双X轴双Y轴绘图</a></li>
                        <li class="py-2"><a href="/news/article-72292.htm" title="北京宠爱国际动物医疗（北京宠爱国际动物医疗机构）">北京宠爱国际动物医疗（北京宠爱国际动物医疗机构）</a></li>
                        <li class="py-2"><a href="/news/article-77691.htm" title="宠物用品批发零售（宠物用品批发连锁）">宠物用品批发零售（宠物用品批发连锁）</a></li>
                        <li class="py-2"><a href="/news/article-87521.htm" title="1970年农历四月二十七是几号呢（1970年农历4月27日）">1970年农历四月二十七是几号呢（1970年农历4月27日）</a></li>
                        <li class="py-2"><a href="/free-nodes/2025-4-10-linux-clash-stash.htm" title="4月10日→21.2M/S|2025年最新免费节点Free Stash Node订阅链接地址">4月10日→21.2M/S|2025年最新免费节点Free Stash Node订阅链接地址</a></li>
                    </ul>
    </div>
</div>

<div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">归纳</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">54</span> <a href="/date/2025-04/" title="2025-04 归档">2025-04</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">90</span> <a href="/date/2025-03/" title="2025-03 归档">2025-03</a></h4>
            </li>
                    </ul>
    </div>
</div>

                    </div>
                </div>
            </div>
        </section>
        <!-- about-section end -->
                <!-- main-footer -->
        <footer class="main-footer">
            <div class="footer-bottom">
                <div class="auto-container">
                    <div class="inner-box clearfix">
                        <div class="copyright pull-left">
                                                <p>
                                                <a href="/">首页</a> |
                                                <a href="/free-nodes/">免费节点</a> |
                                                <a href="/paid-subscribe/">推荐机场</a> |
                                                <a href="/client.htm">客户端</a> |
                                                <a href="/news/">新闻资讯</a> |
                                                <a href="/about-us.htm">关于我们</a> |
                        <a href="/disclaimer.htm">免责申明</a> |
                        <a href="/privacy.htm">隐私申明</a> |
                        <a href="/sitemap.xml">网站地图</a>
                    </p>
                            <p>
                                <a href="/">Free Stash Node免费机场节点分享官网</a> 版权所有 Powered by WordPress
                            </p>
                        </div>
                    </div>
                </div>
            </div>
        </footer>
        <!-- main-footer end -->
        <!--Scroll to top-->
        <button class="scroll-top scroll-to-target" data-target="html">
            <span class="fa fa-arrow-up"></span>
        </button>
        <!-- jequery plugins -->
        <script src="/assets/website/js/frontend/freestashnode/jquery.js"></script>
        <script src="/assets/website/js/frontend/freestashnode/popper.min.js"></script>
        <script src="/assets/website/js/frontend/freestashnode/bootstrap.min.js"></script>
        <script src="/assets/website/js/frontend/freestashnode/owl.js"></script>
        <script src="/assets/website/js/frontend/freestashnode/wow.js"></script>
        <script src="/assets/website/js/frontend/freestashnode/validation.js"></script>
        <script src="/assets/website/js/frontend/freestashnode/jquery.fancybox.js"></script>
        <script src="/assets/website/js/frontend/freestashnode/appear.js"></script>
        <script src="/assets/website/js/frontend/freestashnode/scrollbar.js"></script>
        <!-- main-js -->
        <script src="/assets/website/js/frontend/freestashnode/script.js"></script>
        <script src="https://www.freeclashnode.com/assets/js/frontend/invite-url.js"></script><script src="/assets/website/js/frontend/G.js"></script>
    </div>
</body><!-- End of .page_wrapper -->

</html>